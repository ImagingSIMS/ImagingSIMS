<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ImagingSIMS.Controls.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:data="clr-namespace:ImagingSIMS.Data;assembly=Data"
    xmlns:base="clr-namespace:ImagingSIMS.Controls.BaseControls"
    xmlns:tabs="clr-namespace:ImagingSIMS.Controls.Tabs"
    xmlns:fusion="clr-namespace:ImagingSIMS.Data.Fusion;assembly=Data">

    <BooleanToVisibilityConverter x:Key="boolVisConverter"/>

    <converters:BoolVisInvertedConverter x:Key="boolVisInvertedConverter"/>
    <converters:BoolToScrollTextConverter x:Key="boolToScrollConverter"/>
    <converters:HasTextConverter x:Key="hasTextConverter"/>
    <converters:BoolInvertConverter x:Key="boolInvertConverter"/>
    <converters:Data2DToSizeStringConverter x:Key="data2DToSizeStringConverter"/>
    <converters:Data3DToSizeStringConverter x:Key="data3DToSizeStringConverter"/>
    <converters:Data2DToBitmapSourceConverter x:Key="data2DToBitmapSourceConverter"/>
    <converters:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
    <converters:DataMaximumToSliderRangeConverter x:Key="dataMaximumToSliderRangeConverter"/>

    <ObjectDataProvider x:Key="fusionFromEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="fusion:FusionType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- Fill Brushes -->

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <SolidColorBrush x:Key="TabItemHotBackground" Color="#FF1C97EA"/>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#FF007ACC"/>
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="#FF1C97EA"/>
    <SolidColorBrush x:Key="ButtonClickBackground" Color="#FF08578B"/>
    <SolidColorBrush x:Key="ButtonHoverForeground" Color="#FFFF4040"/>
    <SolidColorBrush x:Key="ButtonClickForeground" Color="#FF761F1F"/>

    <SolidColorBrush x:Key="ThemeBlueBrush" Color="#FF007ACC"/>
    <SolidColorBrush x:Key="ThemeBlueAltBrush" Color="#33007ACC"/>
    
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="BorderBrush" Value="#FF4D5578"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="4"/>
    </Style>
    
    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle 
                            Margin="2"
                            StrokeThickness="1"
                            Stroke="#60000000"
                            StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Content" Value="X"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontFamily" Value="SegoeUI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Margin="2"
                            CornerRadius="7" BorderThickness="0" 
                            Background="Transparent" BorderBrush="Transparent">
                        <ContentPresenter x:Name="ContentPresenter" Margin="0,0,0,0" 
                                          HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                            <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="{StaticResource ButtonHoverForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonClickBackground}"/>
                            <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="{StaticResource ButtonClickForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type base:Hyperlink}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type tabs:ClosableTabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="SegoeUI"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="TabGrid" SnapsToDevicePixels="true" Height="23" MinWidth="95">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,0,0,0" Padding="{TemplateBinding Padding}" Grid.ColumnSpan="2" CornerRadius="0,0,0,0" MinWidth="95" Margin="0"
                                Background="Transparent"/>
                        <Button x:Name="ButtonClose" Style="{StaticResource CloseButtonStyle}" Width="20" Height="20" Margin="0" 
                                HorizontalAlignment="Center" VerticalAlignment="Center" 
                                Panel.ZIndex="1" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Disabled" 
							    VerticalContentAlignment="Center" Padding="0" ToolTip="Close">
                        </Button>
                        <DockPanel x:Name="ContentPanel" Margin="8,4,4,0" Grid.Column="0" LastChildFill="False" Height="Auto" 
                                   HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentPresenter x:Name="Content" ContentSource="Header" 
                                              TextBlock.FontFamily="SegoeUI"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              />
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonClose" Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="Content" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,5,5,1"/>-->
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- This style is used for TabControls within tabs, not the main tab interface -->
    <Style x:Key="BlueTabItemHeader" TargetType="TabItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="TabGrid" SnapsToDevicePixels="true" Height="23" MinWidth="95">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,0,0,0" Padding="{TemplateBinding Padding}" Grid.ColumnSpan="2" CornerRadius="0,0,0,0" MinWidth="95" Margin="0"
                                Background="Transparent"/>
                        <DockPanel x:Name="ContentPanel" Margin="8,3,4,0" Grid.Column="0" LastChildFill="False" Height="Auto" 
                                   HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ContentPresenter x:Name="Content" ContentSource="Header" 
                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                              Margin="0"/>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="Content" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,5,5,1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

</ResourceDictionary>
